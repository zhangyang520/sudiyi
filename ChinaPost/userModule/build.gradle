if(userModule.toBoolean()){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("moduleName", project.getName())
    }
}
android {
    compileSdkVersion compile_SdkVersion
    buildToolsVersion build_ToolsVersion

    sourceSets{
        main{
            if(userModule.toBoolean()){
                manifest.srcFile "src/main/debug/AndroidManifest.xml"
            }else{
                manifest.srcFile "src/main/release/AndroidManifest.xml"
            }
        }
    }
    defaultConfig {
        if(userModule.toBoolean()){
            applicationId application_Id
        }
        minSdkVersion minSdk_Version
        targetSdkVersion target_SdkVersion
        versionCode version_Code
        versionName version_Name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        if(userModule.toBoolean()){
            debug {
                applicationIdSuffix ".dev"
                manifestPlaceholders=[CONSTANT_URL_VALUE:"${project.CONSTANT_URL_DEBUG}",
                                      CURRENT_PRINT_VALUE:"${project.CURRENT_PRINT_VALUE_DEBUG}",
                                      GAODE_APPKEY:"${project.GAODE_DEBUG_APPKEY}",
                                      JPUSH_PKGNAME:"${application_Id}"+applicationIdSuffix]

                minifyEnabled false
            }

            release {
                manifestPlaceholders=[CONSTANT_URL_VALUE:"${project.CONSTANT_URL_PRODUCT}",
                                      CURRENT_PRINT_VALUE:"${project.CURRENT_PRINT_VALUE_PRODUCT}",
                                      GAODE_APPKEY:"${project.GAODE_PROD_APPKEY}",
                                      JPUSH_PKGNAME:"${application_Id}"]

                minifyEnabled false
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //引入 dagger 编译包 生成指定的类
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    compile project(':provider')
    //ARouter
    kapt "com.alibaba:arouter-compiler:$arouter_compiler_version"
    compile 'com.zhihu.android:matisse:0.4.3'
}
